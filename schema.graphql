type Query {
  startup(id: ID!): StartupMutation
  startups: [Startup!]!
}

type StartupMutation {
  id: ID!
  name: String!
  stages: [StageMutation!]!
  stage(id: String!): StageMutation
  removeStage(id: ID!): Startup
  addStage(title: String!): Startup
}

type StageMutation {
  id: ID!
  title: String!
  todos: [Todo!]!
  todo(id: ID!): TodoMutation
  completed: Boolean!
  edit(title: String!): Stage
  removeTodo(id: ID!): Stage
  addTodo: Stage
}

type Todo {
  id: ID!
  title: String!
  completedAt: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type TodoMutation {
  id: ID!
  title: String!
  completedAt: DateTime
  edit(title: String!): Todo

  """
  default to true
  """
  complete(completed: Boolean): Todo
}

type Stage {
  id: ID!
  title: String!
  todos: [Todo!]!
  todo(id: ID!): Todo
  completed: Boolean!
}

type Startup {
  id: ID!
  name: String!
  stages: [Stage!]!
  stage(id: String!): Stage
}

type Mutation {
  startup(id: ID!): StartupMutation
  addStartup(name: String!): StartupMutation
  removeStartup(id: String!): String!
}
